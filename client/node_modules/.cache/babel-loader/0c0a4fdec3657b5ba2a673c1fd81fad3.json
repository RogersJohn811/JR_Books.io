{"ast":null,"code":"import React from'react';import{Container,Card,Button,InputGroup,FormControl}from'react-bootstrap';import{FaSearch}from'react-icons/fa';import Results from\"../components/Results/Results\";import\"./Search.css\";import API from\"../utils/API\";class Search extends React.Component{constructor(...args){super(...args);this.state={books:[],searchTerm:\"\"};this.handleInputChange=event=>{const _event$target=event.target,name=_event$target.name,value=_event$target.value;// pull the data out of the input box\nthis.setState({[name]:value});};this.handleFormSubmit=event=>{event.preventDefault();// prevent the form from wiping out the value on\nthis.getBook();};this.getBook=()=>{const title=this.state.searchTerm.replace(/ /g,\"%20\").toLowerCase();console.log(title);// make sure the title looks right\n// pass the scrubbed title value into our API method getBook as a param.\nAPI.getBook(title)// then we will set our state so we can use the books data in the List component.\n.then(res=>{this.setState({books:res.data.items});}).catch(err=>console.log(err));// catch any errors and display to console.\n};this.saveBook=bookData=>{API.saveBook({_id:bookData.id,title:bookData.title,authors:bookData.authors,description:bookData.description,image:bookData.image,link:bookData.link}).then(console.log(\"Posted\")).catch(err=>console.log(err));};}render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"header-img\"}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"text-center\"},\"Search for Books\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormControl,{value:this.state.search,onChange:this.handleInputChange,placeholder:\"The Joy Luck Club\",name:\"searchTerm\"}),/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(Button,{variant:\"success\",onClick:this.handleFormSubmit},/*#__PURE__*/React.createElement(FaSearch,null)))))),this.state.books.length?/*#__PURE__*/React.createElement(Results,{books:this.state.books,save:this.saveBook}):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"lead font-italic\"},\"No results to display\"))));}}export default Search;","map":{"version":3,"sources":["C:/Users/John Rogers/Documents/Rutgers/Homework/JR_Books.io/client/src/pages/Search.js"],"names":["React","Container","Card","Button","InputGroup","FormControl","FaSearch","Results","API","Search","Component","state","books","searchTerm","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","getBook","title","replace","toLowerCase","console","log","then","res","data","items","catch","err","saveBook","bookData","_id","id","authors","description","image","link","render","search","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport Results  from  \"../components/Results/Results\"\r\nimport \"./Search.css\"\r\nimport API from \"../utils/API\"\r\n\r\nclass Search extends React.Component {\r\n\r\n    // Build our state values\r\n    state = {\r\n        books: [],\r\n        searchTerm: \"\"\r\n    }\r\n\r\n    // Set the state related to what's typed into the input box.\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target; // pull the data out of the input box\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    // Call our getBook() method when the search button is clicked/submitted.\r\n    handleFormSubmit = event => {\r\n        event.preventDefault(); // prevent the form from wiping out the value on\r\n        this.getBook();\r\n    }\r\n\r\n    getBook = () => {\r\n        const title = this.state.searchTerm.replace(/ /g,\"%20\").toLowerCase()\r\n        console.log(title); // make sure the title looks right\r\n        // pass the scrubbed title value into our API method getBook as a param.\r\n        API.getBook(title)\r\n        // then we will set our state so we can use the books data in the List component.\r\n        .then(res => {\r\n            this.setState({\r\n            books: res.data.items\r\n        })}).catch(err => console.log(err)); // catch any errors and display to console.\r\n    }\r\n\r\n    saveBook = bookData => {\r\n        API.saveBook({\r\n            _id: bookData.id,\r\n            title: bookData.title,\r\n            authors: bookData.authors,\r\n            description: bookData.description,\r\n            image: bookData.image,\r\n            link: bookData.link\r\n        }).then(console.log(\"Posted\"))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Header className=\"header-img\">\r\n                    </Card.Header>\r\n                        <Card.Body>\r\n                        <h3 className=\"text-center\">Search for Books</h3>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl \r\n                                    value={this.state.search}\r\n                                    onChange={this.handleInputChange}\r\n                                    placeholder=\"The Joy Luck Club\"\r\n                                    name=\"searchTerm\"\r\n                                />\r\n                                <InputGroup.Append>\r\n                                <Button \r\n                                variant=\"success\"\r\n                                onClick={this.handleFormSubmit}\r\n                                ><FaSearch /></Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    {this.state.books.length ? (\r\n                    <Results\r\n                        books={this.state.books}\r\n                        save={this.saveBook}\r\n                        />\r\n                    ) : (\r\n                    <div>\r\n                        <hr/>\r\n                    <p className=\"lead font-italic\">No results to display</p>\r\n                    </div>\r\n                )}\r\n                \r\n            </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default Search"]},"metadata":{},"sourceType":"module"}